@model DocumentManagementSystem.Models.DocumentTypeModel


@{
    ViewBag.Title = "Dosya Türü Ekleme";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card bg-light">
    <div class="card-body">

        @using (Html.BeginForm("AddDocumentType", "DocumentType", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="row">
                <!--SOL TARAF-->
                <div class="col col-lg-6">
                    <div class="form-group">
                        @Html.Label("Belge Türü Adı *")
                        @Html.TextBoxFor(Model => Model.documentType.DocumentTypeName , new { @class = "form-control" })
                        @Html.ValidationMessageFor(Model => Model.documentType.DocumentTypeName )
                        <br />
                        @Html.Label("Belge Türü Yazısı *")
                        @Html.TextAreaFor(Model => Model.documentType.DocumentTypeText, new { @class = "form-control" })
                        @Html.ValidationMessageFor(Model => Model.documentType.DocumentTypeText)
                        <br />
                        @Html.Label("Belge Türü İmza Adedi *")
                        @Html.TextBoxFor(Model => Model.documentType.DocumentTypeNumSignature, new { @class = "form-control", type = "number" })
                        @Html.ValidationMessageFor(Model => Model.documentType.DocumentTypeNumSignature)
                        <br />
                        @Html.Label("Belge Türü İmza Adedi *")
                        <span title="Alternatif açıklama varsayılan belge açıklamasını yok sayar. Alternatif açıklama istemiyorsanız boş bırakın!"><i class="fa fa-info-circle text-primary"></i></span>
                        @Html.DropDownListFor(m => m.AdminIds, Model.selectAdminItems, new { @class = "form-control", id = "sec" ,multiple="multiple" })


                    </div>
                </div>

                <script>
                    $("#sec").chosen();
                </script>

                <!--SAĞ TARAF-->
                <div class="col col-lg-6">
                    <label>Belge Türü Aktiflik *</label>
                    <div class="form-check">
                        @Html.RadioButtonFor(Model => Model.documentType.DocumentTypeStatus, true, new { @class = " form-check-input", @checked = "checked" })
                        <label class="form-check-label" for="gridRadios2">
                            Aktif-Kullanılabilir
                        </label>
                    </div>
                    <div class="form-check">
                        @Html.RadioButtonFor(Model => Model.documentType.DocumentTypeStatus, false, new { @class = "form-check-input" })
                        <label class="form-check-label" for="gridRadios2">
                            Pasif-Kullanılamaz
                        </label>
                    </div>

                    <br />
                    @Html.Label("Belge Türü Arka Plan Görüntüsü (PNG-JPG)*")
                    <div class="input-group">
                        <input type="file" name="file" class="form-control" id="inputGroupFile04" aria-describedby="inputGroupFileAddon04" aria-label="Upload">
                    </div>

                    @{ if (ViewBag.RecordStatus != null)
                        {
                            if (ViewBag.RecordStatus)
                            {
                                //<p></p>
                            }
                            else
                            {
                                <p>@ViewBag.UploadError</p>
                            }
                        }
                        else
                        {
                            <p>@ViewBag.UploadError</p>
                        }
                    }
                    <br />
                    <button id="AdminAddButton" class="btn btn-primary">Yeni Belge Türü Oluştur</button>
                </div>
            </div>
        }
    </div>
</div>
@{

    if (ViewBag.RecordStatus != null)
    {
        if (ViewBag.RecordStatus)
        {
            <script>
                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: 'btn btn-success',
                        cancelButton: 'btn btn-primary'
                    },
                    buttonsStyling: false
                })

                swalWithBootstrapButtons.fire({
                    title: 'Başarılı',
                    text: "Yeni Belge Türü Oluşturuldu!",
                    icon: 'success',
                    showCancelButton: true,
                    confirmButtonText: 'Tamam',
                    cancelButtonText: 'Belge Türü Listeleme Sayfasına Git',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {

                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        window.location.href = "@Url.Action("DocumentTypeList", "DocumentType")";
                    }
                })
            </script>
        }

    }

}
